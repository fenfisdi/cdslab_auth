import jsoncfg
import pyotp
import qrcode

from PIL import Image

from models.user import user_to_register

qr_settings = jsoncfg.load_config('qr.cfg')

def generate_key_qr() -> str:
    """
    Generates a random key that will be use to generate the QR code with an email asociated

    Returns
    ----------
    pyotp.random_base32 : str

    """
    return pyotp.random_base32()

def generate_url_qr(qr_key: str, user: user_to_register) -> str:
    """
    Generates the url that contains the QR asociated with the user email, this
    QR can be rendered by the frontend

    Parameters
    ----------
    qr_key: str
            A str generated by the pyotp library
    
    user: Pydantic class
           inherits the properties of user_to_register    

     
    Returns
    ----------
    url_qr: Url
            A URL generated by the key_qr and the email user associated
    """
    url_qr = pyotp.TOTP(qr_key).provisioning_uri(user.email)
    return url_qr


