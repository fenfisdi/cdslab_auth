from typing import Tuple, Union

from jose import jwt, JWTError
from source.config import secrets


def validate_email_access_token(token: str) -> Tuple[bool, Union[dict, None]]:
    """
        Extract email from token and return a key pair

        Parameters
        ----------
        token: str
            A string generated by the email_access_token function

        Returns
        ----------
        decode_email: class applicant_user
            Key pair for the associated email
    """
    try:
        decoded_email = jwt.decode(
            token,
            secrets['SECRET_KEY'],
            algorithms=secrets['ALGORITHM']
        )
        if decoded_email.get('email') is None:
            return False, None
        return True, decoded_email
    except JWTError:
        return False, None


def generate_token_jwt(payload: dict):
    """
        Generate token and respective payload

        Parameters
        ----------
        payload: dict
            Dictionary with values to tokenize

        Returns
        ----------
        token: str
            Token for route protection
    """
    token = jwt.encode(
        payload,
        secrets["SECRET_KEY"],
        algorithm=secrets["ALGORITHM"]
    )
    return {"access_token": token}
